version: '3.7'

services:
  minio1:
    image: minio/minio:latest
    container_name: minio1
    networks:
      - minio
    volumes:
      - data1-1:/data1
      - data1-2:/data2
      - build:/build
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
      - MINIO_KMS_KES_ENDPOINT=https://kes:7373
      - MINIO_KMS_KES_CERT_FILE=/build/kes-identity-root.cert
      - MINIO_KMS_KES_KEY_FILE=/build/kes-identity-root.key
      - MINIO_KMS_KES_CA_PATH=/build/kes-server.cert
      - MINIO_KMS_KES_KEY_NAME=minio-key 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio1:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - kes
    command: server http://minio{1...3}/data{1...2}

  minio2:
    image: minio/minio:latest
    container_name: minio2
    networks:
      - minio
    volumes:
      - data2-1:/data1
      - data2-2:/data2
      - build:/build
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
      - MINIO_KMS_KES_ENDPOINT=https://kes:7373
      - MINIO_KMS_KES_CERT_FILE=/build/kes-identity-root.cert
      - MINIO_KMS_KES_KEY_FILE=/build/kes-identity-root.key
      - MINIO_KMS_KES_CA_PATH=/build/kes-server.cert
      - MINIO_KMS_KES_KEY_NAME=minio-key
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio2:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - kes
    command: server http://minio{1...3}/data{1...2}

  minio3:
    image: minio/minio:latest
    container_name: minio3
    networks:
      - minio    
    volumes:
      - data3-1:/data1
      - data3-2:/data2
      - build:/build
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
      - MINIO_KMS_KES_ENDPOINT=https://kes:7373
      - MINIO_KMS_KES_CERT_FILE=/build/kes-identity-root.cert
      - MINIO_KMS_KES_KEY_FILE=/build/kes-identity-root.key
      - MINIO_KMS_KES_CA_PATH=/build/kes-server.cert
      - MINIO_KMS_KES_KEY_NAME=minio-key
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio3:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:     
      - kes
    command: server http://minio{1...3}/data{1...2}
      
  minio-lb:
    image: nginx-minio
    container_name: minio-lb
    volumes:
      - build:/build
    ports:
      - "8081:80"
      - "443:443"
    networks:
      - minio
    restart: always
    build:
      context: ./nginx-minio
    depends_on:
      - minio1
      - minio2
      - minio3

  interactive-shell:
    image: alpine
    tty: true
    container_name: interactive-shell
    networks:
      - minio
    volumes:
      - build:/build
    build:
      context: ./setup      
    environment:
      - KES_SERVER=https://kes:7373
      - KES_CLIENT_KEY=/build/kes-identity-root.key
      - KES_CLIENT_CERT=/build/kes-identity-root.cert
      - VAULT_ADDR=http://host.docker.internal:8201
      - VAULT_API_ADDR=http://host.docker.internal:8201
      - VAULT_ADDRESS=http://host.docker.internal:8201
      - VAULT_SKIP_VERIFY=true
      - VAULT_TOKEN=s.xPsBBNfiUV09xN84mQK7BZA5
    depends_on:
      - minio-lb
    command:  >
      sh -c " cp /build/kes-server.cert /usr/local/share/ca-certificates/kes-server.crt  &&
              update-ca-certificates && 
              mc alias set minio https://minio-lb minio minio123  --api 's3v4' --insecure &&                         
              /bin/sh "

  kes:
    image: kes
    container_name: kes
    ports:
      - "7373:7373"      
    networks:
      - minio 
    volumes:
      - build:/build
    environment:
      - KES_SERVER=https://kes:7373
      - KES_CLIENT_KEY=/build/kes-identity-root.key
      - KES_CLIENT_CERT=/build/kes-identity-root.cert      
    build:
      context: ./kes
    command:  >
      sh -c " openssl ecparam -genkey -name prime256v1 | openssl ec -out /build/kes-server.key &&
              openssl req -new -x509 -days 365 -key /build/kes-server.key -out /build/kes-server.cert -subj '/C=/ST=/L=/O=/CN=kes' -addext 'subjectAltName=DNS:kes'
              kes tool identity new --force --key=/build/kes-identity-root.key --cert=/build/kes-identity-root.cert root &&
              cp /build/kes-identity-root.cert /usr/local/share/ca-certificates/kes-identity-root.crt  &&
              cp /build/kes-server.cert /usr/local/share/ca-certificates/kes-server.crt  &&              
              update-ca-certificates &&              
              kes server --config=/etc/kes/kes-server.yml --root=$$(kes tool identity of /build/kes-identity-root.cert) "

volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  build:

networks:
  minio:
    name: minio
    driver: bridge

