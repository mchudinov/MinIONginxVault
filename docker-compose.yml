version: '3.7'

# starts 4 docker containers running MinIO.
services:
  minio1:
    image: '${MINIO_IMAGE_NAME}'
    container_name: minio1
    networks:
      - minio
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio1:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - vault      

  minio2:
    image: '${MINIO_IMAGE_NAME}'
    container_name: minio2
    networks:
      - minio
    volumes:
      - data2-1:/data1
      - data2-2:/data2
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio2:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - vault

  minio3:
    image: '${MINIO_IMAGE_NAME}'
    container_name: minio3
    networks:
      - minio    
    volumes:
      - data3-1:/data1
      - data3-2:/data2
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio3:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - vault

  minio4:
    image: '${MINIO_IMAGE_NAME}'
    container_name: minio4
    networks:
      - minio    
    volumes:
      - data4-1:/data1
      - data4-2:/data2
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio4:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - vault      

  nginx:
    image: chudinov/nginx-minio
    container_name: nginx
    ports:
      - "8081:80"
      - "443:443"
    networks:
      - minio
    restart: always
    build:
      context: ./nginx
    depends_on:
      - minio1
      - minio2
      - minio3
  
  vault:
    image: chudinov/vault
    container_name: vault
    # volumes:
    #   - ./vault/config:/vault/config
    #   - ./vault/policies:/vault/policies
    #   - ./vault/data:/vault/data
    #   - ./vault/logs:/vault/logs
    ports:
      - 8200:8200
    restart: always
    build:
      context: ./vault
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_API_ADDR=http://0.0.0.0:8200
      - VAULT_ADDRESS=http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    command: vault server -config=/vault/config/vault.json

volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:

networks:
  minio:
    name: minio
    driver: bridge

